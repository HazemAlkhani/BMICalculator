kind: pipeline
type: docker
name: integration

steps:
  - name: code-analysis
    image: mcr.microsoft.com/dotnet/sdk:8.0
    environment:
      SONARSECRET:
        from_secret: sonar_token
    commands:
      - dotnet tool install --global dotnet-sonarscanner
      - export PATH="$PATH:/root/.dotnet/tools"
      - dotnet sonarscanner begin /k:"easv-devops_BMICalculator_AY_FwQjHEVvRW2O60GSZ" /d:sonar.host.url="http://sonar.setgo.dk:9000" /d:sonar.token="$SONARSECRET" /d:sonar.qualitygate.wait=true
      - dotnet build --no-incremental
      - dotnet sonarscanner end /d:sonar.token="$SONARSECRET"

  - name: build-and-release
    image: docker
    environment:
      DOCKER_BUILDKIT: 1
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    commands:
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - docker-compose -f docker-compose.yml build
      - docker-compose -f docker-compose.yml push

  - name: deploy-to-test
    image: appleboy/drone-ssh
    settings:
      host: 62.169.21.165
      username:
        from_secret: ssh_username
      password:
        from_secret: ssh_password
      script:
        - cd ~/bmi_calculator
        - docker-compose -f docker-compose.yml pull
        - docker-compose -f docker-compose.yml up -d

  - name: run-end-to-end-tests
    image: testcafe/testcafe
    commands:
      - testcafe chromium:headless BMICalculatorApi/tests/load.js --disable-native-automation
    depends_on:
      - deploy-to-test

  - name: run-performance-tests
    image: grafana/k6
    commands:
      - k6 run BMICalculatorApi/tests/load.js
    depends_on:
      - deploy-to-test

  - name: deploy-to-production
    image: appleboy/drone-ssh
    depends_on:
      - run-end-to-end-tests
      - run-performance-tests
    settings:
      host: 62.169.21.166
      username:
        from_secret: ssh_username
      password:
        from_secret: ssh_password
      script:
        - cd ~/bmi_calculator
        - docker-compose -f docker-compose.prod.yml pull
        - docker-compose -f docker-compose.prod.yml up -d

trigger:
  branch:
    - master
  event:
    - push

volumes:
  - name: docker_sock
    temp: {}
